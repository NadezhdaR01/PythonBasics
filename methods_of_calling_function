def send_email(message, recipient,*,sender = "university.help@gmail.com"):
    """
    Функция, которая возвращает определенное сообщение в зависимости от значений переданных параметров
    message - сообщение(str), обычный аргумент, может понадобится в функции для улучшения работы программы в будущем
    recipient - получатель(str), обычный аргумент
    sender - отправитель(str), именованный аргумент 
    '*' означает, что message и recipient позиционные параметры, а sender - именованный.
    """
    # Проверка на корректность e-mail отправителя и получателя.
    if '@' not in recipient or not recipient.endswith(('.com', '.ru', '.net')) or '@' not in sender or not sender.endswith(('.com', '.ru', '.net')):
        print(f"Невозможно отправить письмо с адреса {sender} на адрес {recipient}.")
    # Проверка на отправку самому себе.
    elif sender == recipient:
        print("Нельзя отправить письмо самому себе!")
    # Проверка на отправителя по умолчанию.
    elif sender == "university.help@gmail.com":
        print(f"Письмо успешно отправлено с адреса {sender} на адрес {recipient}.")
    else:
        print(f"НЕСТАНДАРТНЫЙ ОТПРАВИТЕЛЬ! Письмо отправлено с адреса {sender} на адрес {recipient}.")

# Вызов функции с разными значениями параметров
send_email('Это сообщение для проверки связи', 'vasyok1337@gmail.com')
send_email('Вы видите это сообщение как лучший студент курса!', 'urban.fan@mail.ru', sender='urban.info@gmail.com')
send_email('Пожалуйста, исправьте задание', 'urban.student@mail.ru', sender='urban.teacher@mail.uk')
send_email('Напоминаю самому себе о вебинаре', 'urban.teacher@mail.ru', sender='urban.teacher@mail.ru')
send_email('Адрес без @', 'urban.teachermail.ru', sender='urban.teacher@mail.ru')
