from random import randint

class Animal:
    """
    класс описывающий животных
    """
    live = True
    sound = None
    _DEGREE_OF_DANGER = 0

    def __init__(self, speed):
        self._cords = [0, 0, 0]
        self.speed = speed

    def move(self, dx, dy, dz):
        """
        move(self, dx, dy, dz) меняет соответствующие координаты 
        в _cords на dx, dy и dz
        в том же порядке, где множителем будет являться speed.
        Если при попытке изменения координаты z в _cords значение будет меньше 0, 
        то выводить сообщение
        "It's too deep, i can't dive :(" , при этом изменения не вносятся.
        """
        if self._cords[2] + dz * self.speed < 0:
            print("It's too deep, i can't dive :(")
        else:
            self._cords[0] += dx * self.speed
            self._cords[1] += dy * self.speed
            self._cords[2] += dz * self.speed

    def get_cords(self):
        """
        get_cords(self) выводит координаты в формате:
        "X: <координаты по x>, 
        Y: <координаты по y>,
        Z: <координаты по z>"
        """
        print(f"X: {self._cords[0]}, Y: {self._cords[1]}, Z: {self._cords[2]}")

    def attack(self):
        """
        attack(self) выводит "Sorry, i'm peaceful :)",
        если степень опасности меньше 5 и "Be careful, i'm attacking you 0_0",
        если равно или больше.
        """
        if self._DEGREE_OF_DANGER < 5:
            print("Sorry, i'm peaceful :)")
        else:
            print("Be careful, i'm attacking you 0_0")

    def speak(self):
        print(self.sound)

class Bird(Animal):
    """
    класс описывающий птиц
    """
    beak = True

    def lay_eggs(self):
        """
        lay_eggs(self) выводит строку 
        "Here are(is) <случайное число от 1 до 4> eggs for you"
        """
        print(f"Here are(is) {randint(1, 4)} eggs for you")

class AquaticAnimal(Animal):
    """
    класс описывающий плавающего животного
    """
    _DEGREE_OF_DANGER = 3

    def dive_in(self, dz):
        self._cords[2] -= abs(dz) * (self.speed // 2)


class PoisonousAnimal(Animal):
    """
    класс описывающий ядовитых животных
    """
    _DEGREE_OF_DANGER = 8

class Duckbill(PoisonousAnimal, Bird, AquaticAnimal):
    """
    класс описывающий утконоса
    """

    def __init__(self, speed):
        super().__init__(speed)
        self.sound = "Click-click-click"


db = Duckbill(10)

print(db.live)
print(db.beak)

db.speak()
db.attack()

db.move(1, 2, 3)
db.get_cords()
db.dive_in(6)
db.get_cords()

db.lay_eggs()
